<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">



    <!--
    引用类型的自动注入
        spring框架根据某些规则可以给引用类型赋值。不用开发者再给引用类型赋值了

        常用规则：
            byName（按名称注入）：
                java中类中引用属性名和spring容器中（配置文件）《bean》的id的名称一样，且数据类型是一致的。这样容器中的bean，
                spring能够赋值给引用类型。

                语法：
                    <bean id="myStudent" class="org.example.ba04.Student" autowire="byName"><bean id="myStudent" class="org.example.ba04.Student" autowire="byName">

            byType（按类型注入）：
                java中引用类型的数据类型和spring容器中（配置文件）《bean》的class属性是同源关系的，这样的bean可以赋值给以用类型

                同源：
                    1.java类中引用类型类型的数据类型和bean的class的值是一样的
                    2.java类中引用类型类型的数据类型和bean的class的值是父子关系的
                    3.java类中引用类型类型的数据类型和bean的class的值是实现类关系的
    -->
    <!--byName-->
    <bean id="myStudent" class="org.example.ba04.Student" autowire="byName">
        <property name="name" value="李四" />
        <property name="age" value="28" />
        <!--引用类型的赋值-->
    </bean>

    <!--声明school对象-->
    <bean id="school" class="org.example.ba04.School"><!--id需要和类的属性名相同-->
        <property name="name" value="吉林大学" />
        <property name="address" value="北京海淀区" />
    </bean>
</beans>